TODO

	- Move creators into Edit.SysEditor

	- make it usable for Sys Admins
	- create necessary  mutations 
		- SysEditor

	- Remove unneeded resolvers
	- Write transformer unit tests


	- move upload stuff to separate microservice
		- upload & remove documents
			- fs server removes file then makes
			  a request for document removal on behalf
			  of the current user, using auth token, to
			  the graphql api.

		- later look into
			- upload iframe with progress report
			- also add csrf token



	- make it usable for Hunters
		- create models
			- Company
			- Hunter
	

	- Things for later on

		- Cascading Deletes
			- removing an account means removing related
				recruit profile  and related documents
			- removing a recruit profile needs all related 
				recruit info, like Documents to be deleted


			- Either perform cascading deletes 

				OR

			- Have a CRON job that periodically removes 
			  non-refrenced documents, i.e. cleaning the 
			  db
		
		- review issues such as flaky network and sturf
		- start serving from tls

		- token system
			- consider firebase auth

			OR
			- add createdAccessTokens to TokenManager.Tokens
			- validate that accessToken is in TokenManager.Tokens before
			  granting access
			- use key & cert to encode and decode tokens
			- consider user devices and ip address as extra means of security

		
